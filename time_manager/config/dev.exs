import Config

pguser = System.get_env("PGUSER")
pgpassword = System.get_env("PGPASSWORD")
pgdatabase = System.get_env("PGDATABASE")
pghost = System.get_env("PGHOST")
pgport = System.get_env("PGPORT")

pguser =
  if pguser do
    pguser
  else
    "postgres"
  end

pgpassword =
  if pgpassword do
    pgpassword
  else
    "postgres"
  end

pgdatabase =
  if pgdatabase do
    pgdatabase
  else
    "todolist_dev"
  end

pghost =
  if pghost do
    pghost
  else
    "pg"
  end

pgport =
  if pgport do
    pgport
  else
    "5432"
  end

# IO.inspect("pguser: " <> pguser)
# IO.inspect("pgpassword: " <> pgpassword)
# IO.inspect("pgdatabase: " <> pgdatabase)
# IO.inspect("pghost: " <> pghost)
# IO.inspect("pgport: " <> pgport)

# Configure your database
config :time_manager_app, TimeManager.Repo,
  username: "#{pguser}",
  password: "#{pgpassword}",
  hostname: "#{pghost}",
  port: "#{pgport}",
  database: "#{pgdatabase}",
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with esbuild to bundle .js and .css sources.
config :time_manager_app, TimeManagerWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {0, 0, 0, 0}, port: 4000],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "1k+WEXNxCaHrwAKF3x8O2QVFFMPVyyPAwFVbKZvcHYXQZ5Vhair90PLWnFkap9mG",
  watchers: []

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Note that this task requires Erlang/OTP 20 or later.
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime
